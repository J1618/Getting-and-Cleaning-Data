mapply(f, X= testfiles, Y=trainfiles)
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE, recursive = TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE, recursive = TRUE)
mapply(f, X= testfiles, Y=trainfiles)
View(`UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt`)
filenames
testfiles
testfiles
sapply(testfiles, sub('(?:.+/)(.+)(?:_test.+)', "\\1"))
apply(testfiles, sub('(?:.+/)(.+)(?:_test.+)', "\\1"))
lapply(testfiles, sub('(?:.+/)(.+)(?:_test.+)', "\\1"))
lapply(testfiles, function(x) {sub(x, '(?:.+/)(.+)(?:_test.+)', "\\1")})
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
invisible(assign(varname, rbind(dataX, dataY), envir = .GlobalEnv))
}
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE, recursive = TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE, recursive = TRUE)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
invisible(assign(varname, rbind(dataX, dataY), envir = .GlobalEnv))
}
mapply(f, X= testfiles, Y=trainfiles)
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
subject_test <- read.delim("UCI HAR Dataset\\test\\subject_test.txt", header=FALSE, sep = " ")
y_test <- read.delim("UCI HAR Dataset\\test\\y_test.txt", header=FALSE, sep = " ", colClasses = "numeric")
x_test <- read.delim("UCI HAR Dataset\\test\\x_test.txt", header=FALSE, sep = "", strip.white = TRUE, colClasses = "numeric")
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv);
}
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
subject_test <- read.delim("UCI HAR Dataset\\test\\subject_test.txt", header=FALSE, sep = " ")
y_test <- read.delim("UCI HAR Dataset\\test\\y_test.txt", header=FALSE, sep = " ", colClasses = "numeric")
x_test <- read.delim("UCI HAR Dataset\\test\\x_test.txt", header=FALSE, sep = "", strip.white = TRUE, colClasses = "numeric")
body_acc_x_test <- read.delim("UCI HAR Dataset\\test\\Inertial Signals\\body_acc_x_test.txt", header=FALSE, sep = "", strip.white = TRUE, colClasses = "numeric")
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE, recursive = TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE, recursive = TRUE)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = " ", colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv);
}
mapply(f, X= testfiles, Y=trainfiles)
x_test <- read.delim("UCI HAR Dataset\\test\\x_test.txt", header=FALSE, sep = "", strip.white = TRUE, colClasses = "numeric")
View(X)
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE, recursive = TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE, recursive = TRUE)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv);
}
mapply(f, X= testfiles, Y=trainfiles)
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE, recursive = TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE, recursive = TRUE)
invisble(mapply(f, X= testfiles, Y=trainfiles))
invisible(mapply(f, X= testfiles, Y=trainfiles))
invisible(mapply(f, X= testfiles, Y=trainfiles))
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv)
}
invisible(mapply(f, X= testfiles, Y=trainfiles))
colnames(body_acc_x)
body_acc_x[1]
plot(body_acc_x[1])
body_acc_x[1]
body_acc_x[1]
body_acc_x[1]$V1
plot(body_acc_x[1]$V1)
View(X)
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
View(features)
View(y)
View(X)
5894/561
561/128
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
View(features)
require(dplyr)
features
features %>% filter(V2 = "mean")
features %>% filter(V2 == "mean")
features %>% filter(grepl("mean", V2)
)
features %>% filter(grepl("mean"|"std", V2)
)
features %>% filter(grepl("mean|std", V2)
)
features %>% filter(grepl("mean|std", V2) %>% select(V1)
features %>% filter(grepl("mean|std", V2)) %>% select(V1)
class(features %>% filter(grepl("mean|std", V2)) %>% select(V1))
list(features %>% filter(grepl("mean|std", V2)) %>% select(V1))
as.numeric(features %>% filter(grepl("mean|std", V2)) %>% select(V1))
features %>% filter(grepl("mean|std", V2)) %>% select(V1)$V1
(features %>% filter(grepl("mean|std", V2)) %>% select(V1))$V1
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% .$V1
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% pull
features %>% filter(grepl("mean|std", V2)) %>% pull(v1)
features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% pull
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% .$V1
View(activity_labels)
View(X)
View(y)
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% .$V1
View(activity_labels)
left_join(y, activity_labels, by = V1)
left_join(y, activity_labels, by = 'V1')
left_join(y, activity_labels, by = 'V1') %>% .$V1
features %>% filter(grepl("mean|std", V2)) %>% select(V1) %>% .$V1
left_join(y, activity_labels, by = 'V1') %>% select(V1)
left_join(y, activity_labels, by = 'V1') %>% select(V2)
cols <- features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
X %>% select(cols)
cols
colnames <- left_join(y, activity_labels, by = 'V1') %>% select(V2)
X %>% select(cols) %>% rename_with(colnames)
X %>% select(cols) %>% .colnames()
X %>% select(cols) %>% .colnames
X %>% select(cols) %>% colnames
vars <- features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
varnames <- left_join(y, activity_labels, by = 'V1') %>% select(V2)
X %>% select(cols) %>% colnames <- varnames
data <- X %>% select(cols)
colnames(data) <- varnames
View(data)
varnames
varnames <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
data <- X %>% select(cols)
colnames(data) <- varnames
vars <- features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
varnames <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
vars <- features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
require(dplyr)
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv)
}
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE)
invisible(mapply(f, X= testfiles, Y=trainfiles))
cols <- features %>% filter(grepl("mean|std", V2)) %>% pull(V1)
varnames <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
cols
varnames
labels <- left_join(y, activity_labels, by = 'V1') %>% select(V2)
labels
selection <- features %>% filter(grepl("mean|std", V2))
cols <- selection %>% pull(V1)
varnames <- selection %>% pull(V2)
varnames
data <- X %>% select(cols)
colnames(data) <- varnames
View(data)
require(dplyr)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv)
}
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE)
invisible(mapply(f, X= testfiles, Y=trainfiles))
cbind(c(subject, y, X))
cbind(subject, y, X)
data <- cbind(subject, y, X)
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ") %>% rename(V2 = "Activity")
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ") %>% rename("Activity" = V2)
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ") %>% rename("Var.Name" = V2)
selection <- features %>% filter(grepl("mean|std", Var.name))
selection <- features %>% filter(grepl("mean|std", Var.Name))
cols <- selection %>% pull(V1)
varnames <- selection %>% pull(Var.Name)
labels <- left_join(y, activity_labels, by = 'V1') %>% select(Var.Name)
labels <- left_join(y, activity_labels, by = 'V1') %>% select(Activity)
activities <- left_join(y, activity_labels, by = 'V1') %>% select(Activity)
data <- X %>% select(cols) %>% rbind(y, activities)
data <- X %>% select(cols) %>% cbind(y, activities)
data <- X %>% select(cols) %>% cbind(y, activities, .)
activities <- left_join(y, activity_labels, by = 'V1') %>% pull(Activity)
data <- X %>% select(cols) %>% cbind(y, activities, .)
data <- X %>% select(cols) %>% cbind(subject, activities, .)
data <- X %>% select(cols)
colnames(data) <- varnames
data <- cbind(subject, activities, data)
f <- function(X, Y){
dataX = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
dataY = read.delim(X, header=FALSE, sep = "", strip.white =TRUE, colClasses = "numeric")
varname = sub('(?:.+/)(.+)(?:_test.+)',"\\1", X)
assign(varname, rbind(dataX, dataY), envir = .GlobalEnv)
}
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ") %>% rename("Var.Name" = V2)
testfiles <- list.files("UCI HAR Dataset/test", pattern="*.txt", full.names=TRUE)
trainfiles <- list.files("UCI HAR Dataset/train", pattern="*.txt", full.names=TRUE)
invisible(mapply(f, X= testfiles, Y=trainfiles))
activity_labels <- read.delim("UCI HAR Dataset\\activity_labels.txt", header=FALSE, sep = " ")
features <- read.delim("UCI HAR Dataset\\features.txt", header=FALSE, sep = " ")
selection <- features %>% filter(grepl("mean|std", V2))
cols <- selection %>% pull(V1)
varnames <- selection %>% pull(V2)
Activity <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
data <- X %>% select(cols)
colnames(data) <- varnames
data <- cbind(subject, activities, data)
activity <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
data <- cbind(subject, activity, data)
View(data)
data <- cbind(subject$V1, activity, data)
data <- cbind(subject, activity, data)
data <- X %>% select(cols)
colnames(data) <- varnames
data <- cbind(subject, activity, data)
y <- pull(V1)
y <- pull(y, V1)
activity <- left_join(y, activity_labels, by = 'V1') %>% pull(V2)
data <- X %>% select(cols)
colnames(data) <- varnames
data <- cbind(subject, activity, data)
subject <- subject %>% pull(V1)
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
View(data)
tidydata <- data %>% group_by(subject, activity) %>% summarise_all(mean, na.rm = TRUE)
View(tidydata)
require(tidyr)
View(tidydata)
tidydata <- data %>% group_by(subject, activity) %>% summarise_all(mean, na.rm = TRUE) %>% pivot_longer(-c(subject, activity), values_to = average)
tidydata <- data %>% group_by(subject, activity) %>% summarise_all(mean, na.rm = TRUE) %>% pivot_longer(-c(subject, activity), values_to = 'average')
tidydata <- data %>% group_by(subject, activity) %>% summarise_all(mean, na.rm = TRUE) %>% pivot_longer(-c(subject, activity), names_to = "variable", values_to = 'average')
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
View(tidydata)
class(subject)
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
data <- X %>%
select(pull(selection, V1))
data <- X %>%
select(pull(selection, V1))
colnames(data) <- pull(selection, V2)
data <- cbind(subject, activity, data) %>% rename("subject", V1)
data <- cbind(subject, activity, data) %>% rename("subject" = V1)
View(data)
View(data)
#grouping the data by subject and activity, taking the mean for each group
#and making the data tidy by rearranging it so each row contains one observation
tidydata <-
data %>%
group_by(subject, activity) %>%
summarise_all(mean, na.rm = TRUE)
View(tidydata)
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
write.table("tidy.txt", row.name = FALSE)
write.table(tidydata, "tidydata.txt", row.name = FALSE)
read.table("tidydata.txt", header = TRUE)
pull(selection, V1)
pull(selection, V2)
pull(selection, V1)
pull(selection, V2)
plot(tidydata$`tBodyAcc-mean()-X`)
plot(tidydata$`tBodyAcc-std()-X`)
plot(tidydata$`tBodyAccJerk-mean()-Y`)
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
write.table(tidydata, "tidydata.txt", row.name = FALSE)
pull(selection, V2)
#identifying variables that include "mean" or "std" in the name
selection <-
features %>%
filter(grepl("mean\(|std\(", V2))
#identifying variables that include "mean" or "std" in the name
selection <-
features %>%
filter(grepl("mean/(|std/(", V2))
#identifying variables that include "mean" or "std" in the name
selection <-
features %>%
filter(grepl("mean\\(|std\\(", V2))
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
pull(selection, V2)
gc()
source("~/Archivos/Codes/R/Coursera/GettingAndCleaningData/run_analysis.R")
View(tidydata)
